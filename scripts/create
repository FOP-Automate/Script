#!/bin/sh

#
# Create script to automate the creation of a new project
#
# Usage: create <task>
#
# Just invokes the wrapper jar
# Additional settings can be taken from environment variables or settings.properties
#

# Attempt to set APP_HOME

# Resolve links: $0 may be a link
app_path=$0

# Code is partially taken from gradlew script
# Gradlew is licensed under the Apache License, Version 2.0
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"} # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$(ls -ld "$app_path")
    link=${ls#*' -> '}
    case $link in         #(
    /*) app_path=$link ;; #(
    *) app_path=$APP_HOME$link ;;
    esac
done

APP_HOME=$(cd "${APP_HOME:-./}" && pwd -P) || exit

APP_NAME="FOP-Automate"
APP_BASE_NAME=${0##*/}

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='-Xmx64m -Xms64m'

JAR=$APP_HOME/wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ]; then
    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ]; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

echo "$JAVACMD" $DEFAULT_JVM_OPTS -cp "$JAR" io.github.fop_automate.create.CreateKt "-t$@"
exec "$JAVACMD" $DEFAULT_JVM_OPTS -cp "$JAR" io.github.fop_automate.create.CreateKt "-t$@"
